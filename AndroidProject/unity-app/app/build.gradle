apply plugin: 'com.android.model.application'

class TimingsListener implements TaskExecutionListener, BuildListener {
    private Clock clock
    private timings = []
    @Override
    void beforeExecute(Task task) {
        clock = new org.gradle.util.Clock()
    }
    @Override
    void afterExecute(Task task, TaskState taskState) {
        def ms = clock.timeInMs
        timings.add([ms, task.path])
        task.project.logger.warn "${task.path} \t\t\t\t========== ${ms}ms"
    }
    @Override
    void buildFinished(BuildResult result) {
        println "Task timings:"
        for (timing in timings) {
            if (timing[0] >= 50) {
                printf "%7sms  %s\n", timing
            }
        }
    }
    @Override
    void buildStarted(Gradle gradle) {}

    @Override
    void projectsEvaluated(Gradle gradle) {}

    @Override
    void projectsLoaded(Gradle gradle) {}

    @Override
    void settingsEvaluated(Settings settings) {}
}
gradle.addListener new TimingsListener()

model {
    android {
        compileSdkVersion = 'Google Inc.:Google APIs:23'
        buildToolsVersion = "23.0.2"

        defaultConfig.with {
            applicationId = "com.snow.unityapp"
            minSdkVersion.apiLevel = 10
            targetSdkVersion.apiLevel = 23
            versionCode = 1
            versionName = "1.0.0"

            buildConfigFields.with {
                create() {
                    type = "int"
                    name = "configField1"
                    value = "1"
                }
            }
        }

        // -- the version of jdk
        tasks.withType(JavaCompile) {
            sourceCompatibility = JavaVersion.VERSION_1_7
            targetCompatibility = JavaVersion.VERSION_1_7
        }
    }

    android.buildTypes {
        release {
            ndk.with {
                debuggable = false
            }
        }
        debug {
            ndk.with {
                debuggable = true
            }
        }
    }

    android.ndk {
        moduleName = "NativePlugin"
        ldLibs += "log"
        abiFilters += "armeabi"
        abiFilters += "armeabi-v7a"
        abiFilters += "x86"
        stl = "gnustl_static"
    }

    // jni folder, default is src/main/jni
    android.sources {
        main {
            jni {
                source {
                    srcDir "src"
                }
            }
        }
    }

    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles += file('proguard-rules.pro')
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile fileTree(include: ['*.so'], dir: 'jniLibs')
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'
    compile 'com.android.support:support-v4:23.0.1'
    compile 'org.kie.modules:org-apache-commons-net:6.3.0.Final'
}
